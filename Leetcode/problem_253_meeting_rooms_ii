


def quicksort(arr):
    if len(arr) < 2:
        return arr

    pivot = arr[0]
    left = []
    right = []
    for elem in arr[1:]:
        if elem>pivot:
            right.append(elem)
        else:
            left.append(elem)

    return quicksort(left) + [pivot]  + quicksort(right)


def getRooms(intervals):
    intervals = quicksort(intervals)

    rooms = 1
    roomdict = {}
    roomdict[intervals[0][1]] = 1 

    for elem in intervals[1:]:
        start = elem[0]
        end = elem[1]

        minend = sorted(roomdict.keys())[0] # Can use heap here to prevent sorting
        if start <= minend:
            rooms = rooms + 1

        else:
            if roomdict[minend] == 1:
                roomdict.pop(minend)
            else:
                roomdict[minend] = roomdict[minend] - 1
        roomdict[end] = roomdict[end] + 1 if end in roomdict else 1

    return rooms

intervals = [[7,10],[11,20]]
print(getRooms(intervals))
